---
// src/components/Testimonials.astro

// Definicje typów
interface GoogleReview {
  id: string;
  author: string;
  verified: boolean;
  text: string;
  rating: number;
  date: string;
}

interface Testimonial {
  id?: string;
  name: string;
  role: string;
  content: string;
  contentTruncated?: string;
  rating: number;
  project: string;
}

interface GoogleApiResponse {
  reviews: GoogleReview[];
  rating: number;
  totalReviews: number;
}

// Fallback testimonials (używane gdy API nie odpowiada)
const fallbackTestimonials: Testimonial[] = [
  {
    name: 'Anna Kowalska',
    role: 'Właścicielka apartamentu',
    content: 'Project Design odmienił nasze mieszkanie w prawdziwy dom. Profesjonalizm, kreatywność i dbałość o każdy szczegół - wszystko na najwyższym poziomie.',
    rating: 5,
    project: 'Apartament 120m², Toruń'
  },
  {
    name: 'Marek Nowicki',
    role: 'CEO firmy technologicznej',
    content: 'Aranżacja naszego biura przeszła wszelkie oczekiwania. Przestrzeń jest nie tylko piękna, ale przede wszystkim funkcjonalna i inspirująca dla zespołu.',
    rating: 5,
    project: 'Biuro 250m², Toruń'
  },
  {
    name: 'Katarzyna i Piotr Wiśniewscy',
    role: 'Rodzina z dziećmi',
    content: 'Szukaliśmy kogoś, kto zrozumie potrzeby rodziny z małymi dziećmi. Project Design stworzył przestrzeń bezpieczną, praktyczną i jednocześnie stylową.',
    rating: 5,
    project: 'Dom 180m², okolice Torunia'
  }
];

// Funkcja do skracania tekstu
function truncateText(text: string, maxLength: number = 300): string {
  if (text.length <= maxLength) return text;
  return text.substring(0, maxLength).trim() + '...';
}

// Funkcja do mapowania opinii z Google na format używany w komponencie
function formatGoogleReviews(googleReviews: GoogleReview[]): Testimonial[] {
  return googleReviews.map((review: GoogleReview) => ({
    id: review.id,
    name: review.author,
    role: review.verified ? 'Zweryfikowany klient' : 'Klient',
    content: review.text,
    contentTruncated: truncateText(review.text),
    rating: review.rating,
    project: review.date
  }));
}

// Pobieranie opinii z Google API
let allTestimonials: Testimonial[] = fallbackTestimonials.map(t => ({
  ...t,
  contentTruncated: truncateText(t.content)
}));
let totalRating: number = 5.0;
let totalReviews: number = 500;

// Pobierz opinie z Google API
const apiEndpoint = import.meta.env.PUBLIC_REVIEWS_API_ENDPOINT;

if (apiEndpoint) {
  try {
    const response = await fetch(apiEndpoint);
    
    if (response.ok) {
      const data: GoogleApiResponse = await response.json();
      
      // Jeśli mamy opinie z Google, użyj ich
      if (data.reviews && data.reviews.length > 0) {
        allTestimonials = formatGoogleReviews(data.reviews);
        totalRating = data.rating || 5.0;
        totalReviews = data.totalReviews || 500;
      }
    }
  } catch (error) {
    console.error('Failed to fetch Google reviews:', error);
  }
}

// Pierwsze 3 opinie do wyświetlenia
const initialTestimonials = allTestimonials.slice(0, 3);
// Dodatkowe opinie (4 i 5)
const additionalTestimonials = allTestimonials.slice(3, 5);

// Funkcja do wyświetlania gwiazdek
function getStarsArray(rating: number): boolean[] {
  return Array(5).fill(0).map((_, i) => i < Math.floor(rating));
}

---

<section class="py-20 bg-slate-50" id="testimonials-section">
  <div class="container mx-auto px-4 lg:px-8">
    <!-- Header -->
    <div class="text-center mb-16 fade-in-observe">
      <h2 class="font-display text-4xl lg:text-5xl font-bold text-slate-900 mb-4">
        Co mówią nasi <span class="text-amber-500">klienci</span>
      </h2>
      <p class="text-lg text-slate-600 max-w-2xl mx-auto">
        Zaufało nam już ponad {totalReviews} klientów. Zobacz, co mówią o współpracy z nami.
      </p>
      
      <!-- Ocena Google -->
      {totalRating && (
        <div class="mt-6 flex items-center justify-center gap-3">
          <div class="flex items-center gap-1">
            {getStarsArray(totalRating).map((filled) => (
              <svg 
                class={`w-6 h-6 ${filled ? 'text-amber-400' : 'text-gray-300'}`}
                fill="currentColor" 
                viewBox="0 0 20 20"
              >
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
              </svg>
            ))}
          </div>
          <span class="text-xl font-semibold text-slate-900">{totalRating.toFixed(1)}</span>
          <span class="text-slate-600">({totalReviews} opinii)</span>
          <img 
            src="https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_92x30dp.png" 
            alt="Google" 
            class="h-6"
          />
        </div>
      )}
    </div>

    <!-- Testimonials Grid -->
    <div class="grid lg:grid-cols-3 gap-8 max-w-6xl mx-auto" id="testimonials-grid">
      {initialTestimonials.map((testimonial, index) => (
        <div 
          class="testimonial-card bg-white p-8 rounded-2xl shadow-lg hover:shadow-2xl transition-all fade-in-observe"
          style={`animation-delay: ${index * 150}ms`}
          data-index={index}
        >
          <!-- Quote Icon -->
          <div class="text-amber-500 mb-6">
            <svg class="w-10 h-10" fill="currentColor" viewBox="0 0 24 24">
              <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h3.983v10h-9.983z"/>
            </svg>
          </div>

          <!-- Content -->
          <div class="testimonial-content relative">
            <p class="text-slate-600 mb-2 leading-relaxed italic truncated-text">
              "{testimonial.contentTruncated || testimonial.content}"
            </p>
            <p class="text-slate-600 mb-6 leading-relaxed italic full-text hidden">
              "{testimonial.content}"
            </p>
            {testimonial.content.length > 300 && (
              <button class="text-amber-500 hover:text-amber-600 text-sm font-medium toggle-text">
                Zobacz więcej
              </button>
            )}
          </div>

          <!-- Rating -->
          <div class="flex mb-4 mt-4">
            {[...Array(5)].map((_, i) => (
              <svg 
                class={`w-5 h-5 ${i < testimonial.rating ? 'text-amber-400' : 'text-gray-300'}`}
                fill="currentColor" 
                viewBox="0 0 20 20"
              >
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
              </svg>
            ))}
          </div>

          <!-- Author -->
          <div class="border-t pt-4">
            <div class="font-semibold text-slate-900">{testimonial.name}</div>
            <div class="text-sm text-slate-500">{testimonial.role}</div>
            <div class="text-xs text-amber-500 mt-1">{testimonial.project}</div>
          </div>
        </div>
      ))}

      <!-- Additional testimonials (hidden by default) -->
      {additionalTestimonials.map((testimonial, index) => (
        <div 
          class="testimonial-card additional-testimonial hidden bg-white p-8 rounded-2xl shadow-lg hover:shadow-2xl transition-all"
          data-index={index + 3}
        >
          <!-- Quote Icon -->
          <div class="text-amber-500 mb-6">
            <svg class="w-10 h-10" fill="currentColor" viewBox="0 0 24 24">
              <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h3.983v10h-9.983z"/>
            </svg>
          </div>

          <!-- Content -->
          <div class="testimonial-content relative">
            <p class="text-slate-600 mb-2 leading-relaxed italic truncated-text">
              "{testimonial.contentTruncated || testimonial.content}"
            </p>
            <p class="text-slate-600 mb-6 leading-relaxed italic full-text hidden">
              "{testimonial.content}"
            </p>
            {testimonial.content.length > 300 && (
              <button class="text-amber-500 hover:text-amber-600 text-sm font-medium toggle-text">
                Zobacz więcej
              </button>
            )}
          </div>

          <!-- Rating -->
          <div class="flex mb-4 mt-4">
            {[...Array(5)].map((_, i) => (
              <svg 
                class={`w-5 h-5 ${i < testimonial.rating ? 'text-amber-400' : 'text-gray-300'}`}
                fill="currentColor" 
                viewBox="0 0 20 20"
              >
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
              </svg>
            ))}
          </div>

          <!-- Author -->
          <div class="border-t pt-4">
            <div class="font-semibold text-slate-900">{testimonial.name}</div>
            <div class="text-sm text-slate-500">{testimonial.role}</div>
            <div class="text-xs text-amber-500 mt-1">{testimonial.project}</div>
          </div>
        </div>
      ))}
    </div>

    <!-- Load More Button -->
    {additionalTestimonials.length > 0 && (
      <div class="text-center mt-10">
        <button 
          id="load-more-testimonials" 
          class="inline-flex items-center gap-2 px-6 py-3 bg-amber-500 hover:bg-amber-600 text-white font-medium rounded-full transition-all transform hover:scale-105"
        >
          <span>Zobacz więcej opinii</span>
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
          </svg>
        </button>
      </div>
    )}   
  </div>
</section>

<style>
  .testimonial-card {
    position: relative;
  }

  .additional-testimonial {
    animation: fadeIn 0.5s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (max-width: 1024px) {
    .additional-testimonial:nth-child(5) {
      grid-column: span 1;
    }
  }
</style>

<script>
  // Toggle individual testimonial text
  document.querySelectorAll<HTMLButtonElement>('.toggle-text').forEach(button => {
    button.addEventListener('click', function(event) {
      const target = event.currentTarget as HTMLButtonElement;
      const card = target.closest('.testimonial-card');
      if (!card) return;
      
      const truncated = card.querySelector<HTMLElement>('.truncated-text');
      const full = card.querySelector<HTMLElement>('.full-text');
      
      if (!truncated || !full) return;
      
      if (full.classList.contains('hidden')) {
        truncated.classList.add('hidden');
        full.classList.remove('hidden');
        target.textContent = 'Ukryj';
      } else {
        truncated.classList.remove('hidden');
        full.classList.add('hidden');
        target.textContent = 'Zobacz więcej';
      }
    });
  });

  // Load more testimonials
  const loadMoreBtn = document.getElementById('load-more-testimonials') as HTMLButtonElement | null;
  if (loadMoreBtn) {
    let moreLoaded = false;
    
    loadMoreBtn.addEventListener('click', function(event) {
      const target = event.currentTarget as HTMLButtonElement;
      const additionalCards = document.querySelectorAll<HTMLElement>('.additional-testimonial');
      
      if (!moreLoaded) {
        // Show additional testimonials
        additionalCards.forEach((card, index) => {
          setTimeout(() => {
            card.classList.remove('hidden');
            if (window.innerWidth >= 1024) {
              card.classList.add('lg:block');
            }
          }, index * 100);
        });
        
        // Change button to "Zobacz wszystkie opinie"
        target.innerHTML = `
          <span>Zobacz wszystkie opinie</span>
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
          </svg>
        `;
        moreLoaded = true;
      } else {
        // Redirect to Google Reviews
        window.open('https://www.google.com/search?sa=X&sca_esv=57724d01b84cf1de&rlz=1C1CHBD_plPL1113PL1113&tbm=lcl&q=Meble+System+-+meble+na+wymiar+Toru%C5%84.+Opinie&rflfq=1&num=20&stick=H4sIAAAAAAAAAONgkxI2NTAyMrA0szS0NDa0NDU0MzA23cDI-IpR1zc1KSdVIbiyuCQ1V0FXIRfMzUtUKK_MzUwsUgjJLyo92qKn4F-QmZeZuoiVNPUAEA2DFHoAAAA&rldimm=5022096919319516035&hl=pl-PL&ved=2ahUKEwjctpv8hPaPAxXOGxAIHUXNGZAQ9fQKegQIPRAH&biw=960&bih=415&dpr=2#lkt=LocalPoiReviews', '_blank');
      }
    });
  }
</script>